#ifndef			DRV_SCREEN_H
#define			DRV_SCREEN_H


//oled显示器分辨率信息
#define	ROWLENGTH             96      //oled宽
#define	LISTLENGTH            32      //oled高
#define	OLEDRAMLENGTH         384  //ROWLENGTH * LISTLENGTH / 8 ,ram所占字节，直接给值是为了减少计算量，提供运行性能
#define	OLED_PIXEL_NUM        3072  //ROWLENGTH * LISTLENGTH ,点阵总数，直接给值是为了减少计算量，提供运行性能
#define OLED_ROW_BYTE		  12	// ROWLENGTH / 8，OLED每行的点阵转为字节的数量		

#ifndef     PIC_INFO_S
#define     PIC_INFO_S

//显示信息结构体
#define	EXRULE                 0      //图片数据格式0，图片数据中无宽、高信息
#define	INCRULE	               1      //图片数据格式1，图片数据中前两个字节为宽、高信息

typedef struct
{
    uint8 axis_X;
    uint8 axis_Y;
    uint8 height;
    uint8 length;
    uint8 dispmode;   //INCRULE:the image data first 2byte was length and height,needn't indicate the length and height
    				  //EXRULE:the image not involve the length, need indicate the lenhth and height
} pic_info_s;

#endif      //PIC_INFO_S

//**********************************************************************
// 函数功能: oled软件、硬件初始化
// 输入参数：dispDiretion: 0:正向显示，1：翻转显示
// 返回参数：	
// 0x00	   : 设置成功
// 0x01    : 设置失败
//**********************************************************************
extern uint8 Drv_Screen_SoftInit(uint8 dispDirect);

//**********************************************************************
// 函数功能: oled硬件初始化
// 输入参数：	
// Data    : 命令或数据
// 返回参数：
// 0x00	   : 初始化成功
// 0x02    : 参数非法
//**********************************************************************
extern uint8 Drv_Screen_Open(void);

//**********************************************************************
// 函数功能:	设置oled断电
// 输入参数：	无
// 返回参数：	
// 0x00	   : 	设置成功
// 0xff    : 	设置失败
//**********************************************************************
extern uint8 Drv_Screen_Close(void);

//**********************************************************************
// 函数功能: 刷新显示oled部分区域
// 输入参数：	
// imageInfo：显示区域信息：x,y坐标，宽、高
// 返回参数：	
// 0x00	   : 设置成功
// 0x04    : 未初始化
//**********************************************************************
extern uint8 Drv_Screen_DispArea(pic_info_s *imageInfo);

//**********************************************************************
// 函数功能: 设置oled所有像素显示为data
// 输入参数：	
// Data    : 像素点显示的内容
// 返回参数：无
//**********************************************************************
extern void Drv_Screen_AllOff(uint8 Data);

//**********************************************************************
// 函数功能: oled显示屏亮
// 输入参数：无
// 返回参数：	
// 0x00	   : 设置成功
// 0x04    : 未初始化
//**********************************************************************
extern uint8 Drv_Screen_LightOn(void);

//**********************************************************************
// 函数功能: oled显示屏灭
// 输入参数：无
// 返回参数：	
// 0x00	   : 设置成功
// 0x04    : 未初始化
//**********************************************************************
extern uint8 Drv_Screen_LightOff(void);

//**********************************************************************
// 函数功能: oled全屏显示
// 输入参数：无
// 返回参数：	
// 0x00	   : 设置成功
// 0x04    : 未初始化
//**********************************************************************
extern uint8 Drv_Screen_DispAll(void);

//**********************************************************************
// 函数功能: oled正常显示
// 输入参数：无
// 返回参数：	
// 0x00	   : 设置成功
// 0x04    : 未初始化
//**********************************************************************
extern uint8 Drv_Screen_DispNormal(void);

//**********************************************************************
// 函数功能: oled正常显示
// 输入参数：无
// 返回参数：返回oled 显示Ram首地址
//**********************************************************************
extern uint8 *Drv_Screen_GetDispRam(void);

//**********************************************************************
// 函数功能: 图像缓存数据更新到显示缓存，暂支持相同区域的数据复制,且8bits对齐
// 输入参数：
// imageInfo：  显示区域信息：x,y坐标，宽、高
//picRamTemp：　图像缓存的首地址
// 返回参数：返回oled 显示Ram首地址
//**********************************************************************
extern uint8 Drv_Screen_PicRamToDispRam(pic_info_s *imageInfo, const uint8 *picRamTemp);

// extern uint8 bspOledDispRam[OLEDRAMLENGTH];
#endif
