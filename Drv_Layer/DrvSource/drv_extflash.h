#ifndef	_EXTFLASH_H
#define	_EXTFLASH_H

#include "platform_common.h"

typedef enum
{
    FLASH_WAKEUP_CMD,  //下wake up命令
    FLASH_SLEEP_CMD,   //下sleep 命令
}flash_cmd;

//**********************************************************************
// 函数功能:	Flash硬件初始化
// 输入参数：	无
// 返回参数：	
// 0x00    :    初始化成功
// 0x02    :    参数错误
//**********************************************************************
extern uint8 Drv_Extflash_Open(void);

//**********************************************************************
// 函数功能:	Flash硬件待机低功耗配置
// 输入参数：	无
// 返回参数：	
// 0x00    :    设置成功
// 0x02    :    参数错误
//**********************************************************************
extern uint8 Drv_Extflash_Close(void);

//**********************************************************************
// 函数功能：    读取8MFlash的uid[8]，并返回uid。
// 输入参数：    void
// 返回参数：	uid数组的指针
//**********************************************************************
extern uint8 *Drv_Extflash_ReadUid(void);

//**********************************************************************
// 函数功能：向flash发送命令
// 输入参数：
//    ft_cmd = FLASH_WAKEUP_CMD: 唤醒指令
//    ft_cmd = FLASH_SLEEP_CMD:  睡眠指令
// 返回参数：	0x00:操作成功
//              0x02:参数错误
//**********************************************************************
extern uint8 Drv_Extflash_SendCmd(flash_cmd fs_cmd);

//**********************************************************************
// 函数功能：   flash空闲状态检测，并返回状态结果。
// 输入参数：    void
// 返回参数：	状态
//              0x00:空闲
//              0x03:忙
//**********************************************************************
extern uint8 Drv_Extflash_CheckState(void);

//**********************************************************************
// 函数功能：    flash读，并操作结果。
// 输入参数：    
//              pdata:  存储读取到的数据buf
//              addr:   要读取的Flash地址
//              length: 读取数据的长度
// 返回参数：	0x00:操作成功
// 				0xFF:操作失败
//**********************************************************************
extern uint8 Drv_Extflash_Read(uint8* pdata, uint32 addr, uint16 length);

//**********************************************************************
// 函数功能：    flash写，并操作结果。
// 输入参数：    
//              pdata:  要写入的数据buf
//              addr:   要写入的Flash地址
//              length: 写入数据的长度
// 返回参数：	0x00:操作成功
// 				0xFF:操作失败
//**********************************************************************
extern uint8 Drv_Extflash_Write(uint8* pdata, uint32 addr, uint16 length);

//**********************************************************************
// 函数功能：   Flash模块擦除某个扇区，并返回操作结果。
// 输入参数：    
//     startSectorAddr:  扇区起始地址
// 返回参数：	0x00:操作成功
// 				0xFF:操作失败
//**********************************************************************
extern uint8 Drv_Extflash_Erase4K(uint32 startSectorAddr);

#endif
