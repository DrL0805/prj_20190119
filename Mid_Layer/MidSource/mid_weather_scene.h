#ifndef MID_WEATHER_SCENE_H
#define MID_WEATHER_SCENE_H


typedef enum 
{
	WEATHER_TENDENCY_SUNNY 				= 0x0000,
	WEATHER_TENDENCY_CLOUDY,
	WEATHER_TENDENCY_OVERCAST,
	WEATHER_TENDENCY_HAZE,
	WEATHER_TENDENCY_ICERAIN,
	WEATHER_TENDENCY_FOGGY,
    
	WEATHER_TENDENCY_LIGHT_RAIN 		= 0x0100,
	WEATHER_TENDENCY_MODERATE_RAIN,
	WEATHER_TENDENCY_HEAVY_RAIN,
	WEATHER_TENDENCY_RAINSTORM,
	WEATHER_TENDENCY_BIG_RAINSTORM,
	WEATHER_TENDENCY_SUPER_RAINSTORM,
    
	WEATHER_TENDENCY_SNOW_SHOWER 		= 0x0200,
	WEATHER_TENDENCY_LIGHT_SNOW,
	WEATHER_TENDENCY_MODERATE_SNOW,
	WEATHER_TENDENCY_HEAVY_SNOW,
	WEATHER_TENDENCY_BLIZZARD ,
    
	WEATHER_TENDENCY_DUST        		=0x0300,
	WEATHER_TENDENCY_DUSTBLOW,
	WEATHER_TENDENCY_SANDSTORM,
	WEATHER_TENDENCY_STRONG_SANDSTORM,
    
	WEATHER_TENDENCY_SHOWER     		=0x0400,
	WEATHER_TENDENCY_THUNDER_RAIN,
	WEATHER_TENDENCY_SLEETY,
	WEATHER_TENDENCY_HAIL,
    
	WEATHER_TENDENCY_NO_INFO 			= 0xFFFF		// 无天气信息
}weather_tendency_s;	




typedef struct 
{
	uint16 weahterStatus;
	int8 weahterCurTemperature;
	int8 weahterMaxTemperature;
	int8 weahterMinTemperature;
}weahter_s;


typedef struct 
{
	uint8 id;
}weather_event_s;


// 事件定义
typedef enum
{
	WEATHER_FORECAST_OPEN = 0,
	WEATHER_FORECAST_CLOSE,
	WEATHER_FORECAST_UPDATA,
	WEATHER_FORECAST_CHECK,
	WEATHER_FORECAST_PRESS_SAMPLE,
	WEATHER_FORECAST_TEMP_SAMPLE,
    WEATHER_FORECAST_GET_INFO,
}WEATHER_FORECAST_INTERFACE_E;


uint16 Mid_WeatherScene_Init(void);
uint16 Mid_WeatherScene_EventProcess(weather_event_s* msg);
uint16 Mid_WeatherScene_TendencyGet(weahter_s *weatherinfo);
uint16 Mid_WeatherScene_TendencySet(weahter_s *weatherinfo);

#endif


