#ifndef MID_SINGLEPORT_H
#define MID_SINGLEPORT_H

#include "platform_common.h"

#define	SINGLE_PORT_NUM		4

typedef enum
{
	RED_LED	= 0,
	GREEN_LED,
	MOTO,
	BACKLIGHT,
} port_type_t;

//单口驱动参数
typedef struct 
{
    uint16  highTime;     //高电平时间
    uint16  lowTime;      //低电平时间
    uint16  driveTimes;   //高低电平周期数
    uint16  portType;     //单口类型
}single_port_set_para_s;

//单口驱动完成回调
typedef void (*SinglePortFinishCb)(uint16 portType);

//**********************************************************************
//设置单口驱动参数
//输入参数：设置单口参数结构体
//输出：无
//**********************************************************************
extern void Mid_SinglePort_SetPara(single_port_set_para_s *setPara);

//**********************************************************************
//把单口驱动初始化
//输入参数：设置单口参数结构体
//输出：无
//**********************************************************************
extern void Mid_SinglePort_Init(void);

//**********************************************************************
//函数功能：单口驱动完成回调初始化
//输入参数：设置单口参数结构体
//输出：无
//**********************************************************************
extern void Mid_SinglePort_SetCallBack(SinglePortFinishCb Cb);

//**********************************************************************
//函数功能：获取单口状态
//输入参数：无
//输出：无
//**********************************************************************
extern uint16 Mid_SinglePort_ReadStatus(void);

//**********************************************************************
//函数功能：MOTO周期性处理
//输入参数：无
//输出：无
//**********************************************************************
extern void Mid_SinglePort_PeriodProcessMoto(void);

//**********************************************************************
//函数功能：GREENLED周期性处理
//输入参数：无
//输出：无
//**********************************************************************
extern void Mid_SinglePort_PeriodProcessGreenLed(void);

//**********************************************************************
//函数功能：REDLED周期性处理
//输入参数：无
//输出：无
//**********************************************************************
extern void Mid_SinglePort_PeriodProcessRedLed(void);

//**********************************************************************
//函数功能：背光周期性处理
//输入参数：无
//输出：无
//**********************************************************************
extern void Mid_SinglePort_PeriodProcessBackLight(void);

//**********************************************************************
//函数功能：单口ON
//输入参数：无
//输出：无
//**********************************************************************
extern void Mid_SinglePort_On(uint16 portType);

//**********************************************************************
//函数功能：单口OFF
//输入参数：无
//输出：无
//**********************************************************************
extern void Mid_SinglePort_Off(uint16 portType);
#endif			// SINGLEPORTDRIVE_APP_H
