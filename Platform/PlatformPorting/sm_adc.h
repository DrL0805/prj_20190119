#ifndef __SM_ADC_H
#define __SM_ADC_H

#include "platform_common.h"

//定义使用ADC的模块的slot，如bat用slot 0，则定义BAT_ADC_SLOT为0
//ADC for BAT
#define BAT_ADC_SLOT  0

typedef void (*adc_cb)(uint32 u32adcValue);

//**********************************************************************
// 函数功能: 初始化ADC
// 输入参数：
// 返回参数：
//**********************************************************************
extern void SMDrv_ADC_Init(void);

//*****************************************************************************
//函数功能：打开一个ADC通道
// 输入参数：adc_slot：   adc 通道号
// 			adc_callback: callback函调函数
// 返回：	无
//*****************************************************************************
extern ret_type SMDrv_ADC_Open(uint32 adc_slot,adc_cb adc_callback);

//*****************************************************************************
//函数功能：关闭一个打开的ADC通道
// 输入参数：adc_slot：   adc 通道号
// 			adc_callback: callback函调函数
// 返回：	无
//*****************************************************************************
extern ret_type SMDrv_ADC_Close(void);

//**********************************************************************
// 函数功能:  设置ADC中断优先级,并启动ADC中断
// 输入参数:
//     prio:中断优先级，bit0~2位值有效
// 返回参数： 无
//**********************************************************************
extern ret_type SMDrv_ADC_SetIsrPrio(uint32 prio);

//**********************************************************************
// 函数功能: ADC模块使能，电路上电
// 输入参数：无
// 返回参数:
//**********************************************************************
extern void SMDrv_ADC_Enable(void);

//**********************************************************************
// 函数功能: ADC模块关闭，电路断电
// 输入参数：无
// 返回参数：
//**********************************************************************
extern void SMDrv_ADC_Disable(void);

//**********************************************************************
// 函数功能: 启动ADC转换
// 输入参数：无
// 返回参数：	
//**********************************************************************
extern void SMDrv_ADC_StartDetect(void);

#endif

